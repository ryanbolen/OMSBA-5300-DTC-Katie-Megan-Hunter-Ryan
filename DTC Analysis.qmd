---
author: "Ryan Bolen, Katie Yamabe, Megan Mixon, Hunter Elliott"
title: "DTC"
format: html
editor: visual
---

```{r}
library(haven)
library(dplyr)
library(tidyr)
library(ggplot2)
library(fixest)
library(lubridate)
```

You can add options to executable code like this

```{r}
main_data <- read_dta("dta2.dta.gz")

```

```{r}
# Categorizing different industries - capturing retail and pulling a few other 'comparable' industries into a tibble to join up with the main data frame. 

retail_codes <- c(5580,5180,5180,1190,3895,4770,4795,5370,5381,5391,5275)

retail_tib <- tibble(ind = retail_codes,industry_name = 'retail')

dining_codes <- c(8680,8690)

dining_tib <- tibble(ind = dining_codes,industry_name = 'dining')

entertainment_codes <- c(8562,8564,8570,8580,8590)

entertainment_tib <- tibble(ind = entertainment_codes, industry_name = 'entertainment')

big_tib <- retail_tib %>% bind_rows(dining_tib) %>% bind_rows(entertainment_tib)
```

```{r}

# Get rid of observations without an industry specified in raw data and cutting down to not go past 2022

main_data <- main_data %>% filter(!is.na(ind))
main_data <- main_data %>% filter(year < 2023)

# Join up main data frame with the actual industry name

industry_sorted_data <- main_data %>% left_join(big_tib, join_by(ind))

industry_sorted_data <- industry_sorted_data %>% mutate(industry_f = replace_na(industry_name,'other')) %>% filter(durunemp < 999)

# Summarize the number of observations in our sample that are in each industry sector in each year 




```

```{r}

data_by_month <- industry_sorted_data %>% group_by(industry_f,year,month) %>% summarise(avg_time_unempl = mean(durunemp)) 

# Creating an actual date variable by combining month and year

data_by_month <- data_by_month %>% mutate(date = make_date(year,month))


ggplot(data = data_by_month %>% filter(industry_f %in% c('retail','other')),mapping = aes(x = date,y = avg_time_unempl, color = industry_f)) + geom_smooth()

#model1 <- feols()


# GET AVERAGE NUMBER OF PEOPLE UNEMPLOYED. 

# Ideas:

# Cutoff period - regression discontinuity. During this time, when did it hit?
# Sample weights
```

The `echo: false` option disables the printing of code (only output is displayed).
